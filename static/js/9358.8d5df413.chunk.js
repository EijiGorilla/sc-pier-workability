"use strict";(self.webpackChunksc_pier_workability=self.webpackChunksc_pier_workability||[]).push([[9358],{9358:(e,r,i)=>{i.r(r),i.d(r,{default:()=>c});var a=i(35143),t=i(50076),s=i(46053),l=(i(81806),i(76460),i(47249),i(85842)),p=i(2190),n=i(68649);let o=class extends((0,n.A)(p.A)){constructor(){super(...arguments),this.type="ogc-feature-3d"}initialize(){this.layer.serviceSupportsSpatialReference(this.view.spatialReference)||this.addResolvingPromise(Promise.reject(new t.A("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:this.layer})))}};(0,a._)([(0,s.MZ)()],o.prototype,"layer",void 0),o=(0,a._)([(0,l.$)("esri.views.3d.layers.OGCFeatureLayerView3D")],o);const c=o},68649:(e,r,i)=>{i.d(r,{A:()=>l});var a=i(35143),t=i(46053),s=(i(81806),i(76460),i(47249),i(85842));const l=e=>{let r=class extends e{get availableFields(){return this.layer.fieldsIndex.fields.map(e=>e.name)}};return(0,a._)([(0,t.MZ)()],r.prototype,"layer",void 0),(0,a._)([(0,t.MZ)({readOnly:!0})],r.prototype,"availableFields",null),r=(0,a._)([(0,s.$)("esri.views.layers.OGCFeatureLayerView")],r),r}}}]);
//# sourceMappingURL=9358.8d5df413.chunk.js.map